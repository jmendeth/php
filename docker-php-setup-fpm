#!/bin/bash
set -eux

cd /usr/local/etc
if [ -d php-fpm.d ]; then
	# for some reason, upstream's php-fpm.conf.default has "include=NONE/etc/php-fpm.d/*.conf"
	sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null
	cp php-fpm.d/www.conf.default php-fpm.d/www.conf
else
	# PHP 5.x doesn't use "include=" by default, so we'll create our own simple config that mimics PHP 7+ for consistency
	mkdir php-fpm.d
	cp php-fpm.conf.default php-fpm.d/www.conf
	{
		echo '[global]'
		echo 'include=etc/php-fpm.d/*.conf'
	} | tee php-fpm.conf
fi

{
	echo '[global]'
	echo 'error_log = /proc/self/fd/2'
if [ ! -z ${REMOVE_LOG_DECORATION+x} ]; then
	echo; echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114'; echo 'log_limit = 8192'
fi
	echo
	echo '[www]'
	echo '; if we send this to /proc/self/fd/1, it never appears'
if [ -z ${APACHE_FPM+x} ]; then
	echo 'access.log = /proc/self/fd/2'
fi
	echo
	echo 'clear_env = no'
	echo
	echo '; Ensure worker stdout and stderr are sent to the main error log.'
	echo 'catch_workers_output = yes'
if [ ! -z ${REMOVE_LOG_DECORATION+x} ]; then
	echo 'decorate_workers_output = no'
fi
} | tee php-fpm.d/docker.conf

{
	echo '[global]'
	echo 'daemonize = no'
	echo
	echo '[www]'
if [ ! -z ${APACHE_FPM+x} ]; then
	echo 'listen = /var/run/php-fpm/fpm.sock\nlisten.mode = 666'
else
	echo 'listen = 9000'
fi
} | tee php-fpm.d/zz-docker.conf

if [ ! -z ${APACHE_FPM+x} ]; then
	# create directory to hold socket
	mkdir -p /var/run/php-fpm && chmod 777 /var/run/php-fpm
fi
